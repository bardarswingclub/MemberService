@using MemberService.Data.ValueTypes
@using MemberService.Auth
@model MemberService.Components.SemesterHeader.SemesterHeaderViewComponent.Model

<div class="overflow-container dark-tabs" style="background: #cbd3d9;">
    <h2 class="d-flex justify-content-between flex-wrap">
        <a class="link-unstyled" asp-controller="Semester" asp-action="Index" asp-route-id="@Model.Id">@Model.Title</a>

        <div class="btn-group overflow-auto">
            @if (await AuthorizationService.IsAuthorized(User, Policy.CanPreviewSemesterSignup) && Model.IsActive)
            {
                <a class="btn btn-secondary" asp-controller="Home" asp-action="Courses" asp-route-preview="x">Forhåndsvis påmelding</a>
            }

            @if (await AuthorizationService.IsAuthorized(User, Policy.CanEditSemester) && Model.IsActive)
            {
                <a class="btn btn-secondary" asp-controller="Semester" asp-action="Edit">Rediger</a>
            }

            @if (Model.SurveyId.HasValue)
            {
                <a class="btn btn-secondary" asp-page="/Semester/Survey" asp-route-id="@Model.Id">Spørreundersøkelse</a>
            }
            else if (await AuthorizationService.IsAuthorized(User, Model.Id, Policy.CanCreateSurvey) && Model.IsActive)
            {
                <a class="btn btn-secondary" asp-controller="Survey" asp-action="CreateSemesterSurvey" asp-route-id="@Model.Id">Spørreundersøkelse</a>
            }

            @if (await AuthorizationService.IsAuthorized(User, Policy.CanEditSemesterRoles) && Model.IsActive)
            {
                <a class="btn btn-secondary" asp-page="/Semester/Roles">Roller</a>
            }
        </div>
    </h2>

    <ul class="nav nav-tabs flex-row pt-3 mb-0 overflow-container nowrap-tabs">
        @foreach (var ev in Model.Events)
        {
            <li class="nav-item">
                <a class="nav-link" highlight-active highlight-active-when="id" asp-controller="Event" asp-action="View" asp-route-id="@ev.Id">
                    @ev.Title
                    @if (ev.Roles && ev.PendingFollows+ev.PendingLeads > 0)
                    {
                        <sup class="badge badge-pill badge-danger badge-up">@ev.PendingLeads + @ev.PendingFollows</sup>
                    }
                    else if(ev.Pending > 0)
                    {
                        <sup class="badge badge-pill badge-danger badge-up">@ev.Pending</sup>
                    }
                </a>
            </li>
        }

        @if (await AuthorizationService.IsAuthorized(User, Policy.CanCreateSemesterEvent) && Model.IsActive)
        {
            <li class="nav-item">
                <a class="nav-link text-success" highlight-active highlight-active-when="controller action" asp-page="/Event/CreateClass">+ Nytt kurs</a>
            </li>
        }
    </ul>
</div>