<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Betal kursavgift" xml:space="preserve">
    <value>Pay classes fee</value>
  </data>
  <data name="Betal kursavgift - {0}" xml:space="preserve">
    <value>Pay classes fee - {0}</value>
  </data>
  <data name="Betal med kort" xml:space="preserve">
    <value>Pay with creditcard</value>
  </data>
  <data name="Betal med vipps" xml:space="preserve">
    <value>Pay with vipps</value>
  </data>
  <data name="Betal treningsavgfit - {0}" xml:space="preserve">
    <value>Pay training fee - {0}</value>
  </data>
  <data name="Betal treningsavgift" xml:space="preserve">
    <value>Pay training fee</value>
  </data>
  <data name="Betal {0}" xml:space="preserve">
    <value>Pay {0}</value>
  </data>
  <data name="Bli medlem" xml:space="preserve">
    <value>Become a member</value>
  </data>
  <data name="Bli medlem - {0}" xml:space="preserve">
    <value>Become a member - {0}</value>
  </data>
  <data name="Det koster &lt;strong&gt;{0}&lt;/strong&gt; å delta" xml:space="preserve">
    <value>It costs &lt;strong&gt;{0}&lt;/strong&gt; to participate</value>
  </data>
  <data name="Dette arrangementet er kun åpent for medlemmer av klubben." xml:space="preserve">
    <value>This event is only open for members.</value>
  </data>
  <data name="Dette arrangementet er kun åpent for medlemmer som har betalt kursavgift." xml:space="preserve">
    <value>This event is only open for members who have paid the classes fee</value>
  </data>
  <data name="Dette arrangementet er kun åpent for medlemmer som har betalt treningsavgift/kursavgift." xml:space="preserve">
    <value>This event is only open for members who have paid the training or classes fee</value>
  </data>
  <data name="Dette arrangementet koster kun &lt;strong&gt;{0}&lt;/strong&gt; for medlemmer av Bårdar Swing Club." xml:space="preserve">
    <value>This event costs only &lt;strong&gt;{0}&lt;/strong&gt; for members of Bårdar Swing Club.</value>
  </data>
  <data name="Du må betale &lt;strong&gt;{0}&lt;/strong&gt; for å godta plassen" xml:space="preserve">
    <value>You must pay &lt;strong&gt;{0}&lt;/strong&gt; to accept the spot</value>
  </data>
  <data name="Godta plass" xml:space="preserve">
    <value>Accept spot</value>
  </data>
  <data name="Gratulerer, du har fått plass!" xml:space="preserve">
    <value>Congratulations, you've got a spot!</value>
  </data>
  <data name="Jeg vil ikke delta" xml:space="preserve">
    <value>I don't want to participate</value>
  </data>
  <data name="Kursavgiften koster &lt;strong&gt;{0}&lt;/strong&gt; (dette semesteret)." xml:space="preserve">
    <value>The classes fee is &lt;strong&gt;{0}&lt;/strong&gt; (this semester).</value>
  </data>
  <data name="Medlemskap i klubben koster &lt;strong&gt;{0}&lt;/strong&gt; (ut året)." xml:space="preserve">
    <value>Membership costs &lt;strong&gt;{0}&lt;/strong&gt; (this year)</value>
  </data>
  <data name="Medlemskap koster &lt;strong&gt;{0}&lt;/strong&gt; ut året og gir deg rabatt på dette og andre arrangementer." xml:space="preserve">
    <value>Membership costs &lt;strong&gt;{0}&lt;/strong&gt; this year and gives you discounts on this and other events.</value>
  </data>
  <data name="Nei takk" xml:space="preserve">
    <value>No, thank you</value>
  </data>
  <data name="Treningsavgiften koster &lt;strong&gt;{0}&lt;/strong&gt; (dette semesteret)." xml:space="preserve">
    <value>The training fee is &lt;strong&gt;{0}&lt;/strong&gt; (this semester).</value>
  </data>
  <data name="Trykk på knappen under for å godta plassen." xml:space="preserve">
    <value>Click the button below to accept the spot</value>
  </data>
  <data name="Vil du bli medlem?" xml:space="preserve">
    <value>Do you want to become a member?</value>
  </data>
</root>