@using MemberService.Pages.Signup
@model AcceptModel

@{
    ViewData["Title"] = Model.Title;
    Layout = "~/Pages/_CoverLayout.cshtml";
}

<div class="card shadow mt-5">
    <h3 class="card-header">
        @ViewData["Title"]
    </h3>
    <div class="card-body">
        <p class="lead">@Model.Description</p>

        <div class="alert alert-success" role="alert">
            <h3 class="alert-heading">Gratulerer, du har fått plass!</h3>

            @switch (Model.Requirement)
            {
                case SignupRequirement.MustPayClassesFee:
                    <p>Betal kursavgiften for dette semesteret for å godta plassen.</p>
                    break;
                case SignupRequirement.MustPayTrainingFee:
                    <p>Betal treningsavgiften for dette semesteret for å godta plassen.</p>
                    break;
                case SignupRequirement.MustPayMembershipFee:
                    <p>Du må være medlem for å delta på dette arrangementet. Betal medlemsavgiften for i år for å godta plassen.</p>
                    break;
                case SignupRequirement.MustPayMembersPrice:
                case SignupRequirement.MustPayNonMembersPrice:
                    <p>Du må betale @Model.MustPayAmount.FormatMoney() for å godta plassen</p>
                    break;
                default:
                    <p>Trykk på knappen under for å godta plassen.</p>
                    break;
            }
        </div>
    </div>
    <form asp-action="acceptOrReject" asp-route-id="@Model.Id" method="POST" class="card-footer">
        <button type="submit" name="accept" value="true" class="btn btn-success btn-block">
            @if (Model.MustPayAmount > 0)
            {
                @: Betal @Model.MustPayAmount.FormatMoney()
            }
            else
            {
                @: Godta plass
            }
        </button>
        <button type="submit" name="accept" value="false" class="btn btn-outline-danger btn-block text-left">Nei takk</button>
    </form>
</div>