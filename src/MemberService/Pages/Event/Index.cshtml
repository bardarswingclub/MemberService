@using MemberService.Data.ValueTypes
@model IReadOnlyList<EventEntry>

@{
    ViewData["Title"] = "Arrangementer";
}
<h2>
    @ViewData["Title"]
    @if (await AuthorizationService.IsAuthorized(User, Policy.CanCreateEvent))
    {
        <div class="btn-group float-right">
            <button type="button" class="btn btn-success dropdown-toggle" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                Opprett nytt arrangement
            </button>
            <div class="dropdown-menu dropdown-menu-right">
                @if (User.CanCreateWorkshop())
                {
                    <a class="dropdown-item" asp-action="Create" asp-route-type="@EventType.Workshop">@EventType.Workshop.DisplayDescription()</a>
                }
                @if(User.CanCreateParty())
                {
                    <a class="dropdown-item" asp-action="Create" asp-route-type="@EventType.Party">@EventType.Party.DisplayDescription()</a>
                }
            </div>
        </div>
    }
</h2>


<table class="table">
    <thead>
        <tr>
            <th>Navn</th>
            <th>Påmeldte</th>
            <th>Deltakere</th>
            <th>Status</th>
        </tr>
    </thead>
    <tbody>
        @foreach(var eventEntry in Model)
        {
            <tr>
                <td>
                    @if (eventEntry.CanView)
                    {
                        <a asp-action="View" asp-route-id="@eventEntry.Id">@eventEntry.Title</a>
                    }
                    else
                    {
                        @eventEntry.Title
                    }
                    <span class="text-muted">(@eventEntry.Type.DisplayName())</span>
                </td>
                <td>@eventEntry.RolesCount()</td>
                <td>@eventEntry.RolesCount(Status.AcceptedAndPayed)</td>
                <td>@eventEntry.Status()</td>
            </tr>
        }
    </tbody>
</table>

<a href="?archived=true">Se gamle arrangementer også</a>
