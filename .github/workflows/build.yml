name: Build and deploy

on:
  push:
    branches:
      - master

env:
  AdminEmails: gundersen@gmail.com, erikly@gmail.com
  FromEmail: pamelding@bardarswingclub.no
  azureSubscription: bsc-medlemmer
  appName: bsc-medlemmer
  resourceGroup: bsc-medlemmer-rg
jobs:
  Build:
    runs-on: ubuntu-latest
    outputs:
      message_id: ${{ steps.slack.outputs.message_id }}
    steps:
      - uses: voxmedia/github-action-slack-notify-build@v1
        id: slack
        with:
          channel: edb
          status: BUILD STARTED
          color: warning
        env:
          SLACK_BOT_TOKEN: ${{ secrets.SLACK_TOKEN }}

      - uses: actions/checkout@v4
      - name: .NET Core 8 for building
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: 8.0.x
      - name: Cache NuGet packages
        uses: actions/cache@v4
        with:
          key: nuget | "${{ runner.os }}"
          restore-keys: nuget | "${{ runner.os }}"
          path: ${{ github.workspace }}/.nuget/packages
      - name: Restore
        run: dotnet restore
      - name: Build
        run: dotnet build --no-restore --configuration release
      - name: Test
        run: dotnet test --no-restore --no-build --configuration release
      - name: Publish
        run: dotnet publish --no-restore --no-build --configuration release --output output
      - name: Archive Release
        uses: thedoctor0/zip-release@master
        with:
          directory: output
          filename: ../webapp.zip
      - name: Publish artifact WebApp
        uses: actions/upload-artifact@v4
        with:
          path: |
            webapp.zip
            infrastructure/
          name: WebApp

      - name: Notify slack success
        if: success()
        env:
          SLACK_BOT_TOKEN: ${{ secrets.SLACK_TOKEN }}
        uses: voxmedia/github-action-slack-notify-build@v2
        with:
          channel: edb
          status: BUILD COMPLETED
          color: good
          message_id: ${{ steps.slack.outputs.message_id }}

      - name: Notify slack fail
        if: failure()
        env:
          SLACK_BOT_TOKEN: ${{ secrets.SLACK_TOKEN }}
        uses: voxmedia/github-action-slack-notify-build@v2
        with:
          channel: edb
          status: BUILD FAILED
          color: danger
          message_id: ${{ steps.slack.outputs.message_id }}

  Deploy:
    runs-on: ubuntu-latest
    needs: Build
    outputs:
      message_id: ${{ needs.Build.outputs.message_id }}
    environment:
      name: Test
    steps:
      - uses: voxmedia/github-action-slack-notify-build@v2
        with:
          channel: edb
          status: TEST DEPLOY STARTED
          color: warning
          message_id: ${{ needs.Build.outputs.message_id }}
        env:
          SLACK_BOT_TOKEN: ${{ secrets.SLACK_TOKEN }}

      - uses: actions/download-artifact@v4.1.7
        with:
          name: WebApp
      - name: Azure Login
        uses: azure/login@v1
        with:
          creds: '{"clientId":"${{ secrets.AZURE_CLIENT_ID }}","clientSecret":"${{ secrets.AZURE_CLIENT_SECRET }}","subscriptionId":"${{ secrets.AZURE_SUBSCRIPTION_ID }}","tenantId":"${{ secrets.AZURE_TENANT_ID }}"}'
      - uses: Azure/cli@v1.0.0
        with:
          inlineScript: az deployment group create --resource-group bsc-medlemmer-rg --template-file infrastructure/main.bicep
      - uses: Azure/webapps-deploy@v2
        with:
          app-name: ${{ env.appName }}
          package: webapp.zip
          slot-name: test

      - name: Notify slack success
        if: success()
        env:
          SLACK_BOT_TOKEN: ${{ secrets.SLACK_TOKEN }}
        uses: voxmedia/github-action-slack-notify-build@v2
        with:
          channel: edb
          status: TEST DEPLOY COMPLETED
          color: good
          message_id: ${{ needs.Build.outputs.message_id }}

      - name: Notify slack fail
        if: failure()
        env:
          SLACK_BOT_TOKEN: ${{ secrets.SLACK_TOKEN }}
        uses: voxmedia/github-action-slack-notify-build@v2
        with:
          channel: edb
          status: TEST DEPLOY FAILED
          color: danger
          message_id: ${{ needs.Build.outputs.message_id }}

  Swap:
    runs-on: ubuntu-latest
    needs: Deploy
    environment:
      name: Prod
    steps:
      - uses: voxmedia/github-action-slack-notify-build@v2
        with:
          channel: edb
          status: PROD SWAP STARTED
          color: warning
          message_id: ${{ needs.Deploy.outputs.message_id }}
        env:
          SLACK_BOT_TOKEN: ${{ secrets.SLACK_TOKEN }}

      - name: Azure Login
        uses: azure/login@v1
        with:
          creds: '{"clientId":"${{ secrets.AZURE_CLIENT_ID }}","clientSecret":"${{ secrets.AZURE_CLIENT_SECRET }}","subscriptionId":"${{ secrets.AZURE_SUBSCRIPTION_ID }}","tenantId":"${{ secrets.AZURE_TENANT_ID }}"}'
      - uses: Azure/cli@v1.0.0
        with:
          inlineScript: az webapp deployment slot swap --resource-group ${{ env.resourceGroup }} --name ${{ env.appName }} --slot test --target-slot production

      - name: Notify slack success
        if: success()
        env:
          SLACK_BOT_TOKEN: ${{ secrets.SLACK_TOKEN }}
        uses: voxmedia/github-action-slack-notify-build@v2
        with:
          channel: edb
          status: PROD SWAP COMPLETED
          color: good
          message_id: ${{ needs.Deploy.outputs.message_id }}

      - name: Notify slack fail
        if: failure()
        env:
          SLACK_BOT_TOKEN: ${{ secrets.SLACK_TOKEN }}
        uses: voxmedia/github-action-slack-notify-build@v2
        with:
          channel: edb
          status: PROD SWAP FAILED
          color: danger
          message_id: ${{ needs.Deploy.outputs.message_id }}
